/* 
 * Selling Partner API for Pricing
 *
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer information for Amazon Marketplace products.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Runtime.Serialization;
using System.Text;

namespace FikaAmazonAPI.AmazonSpApiSDK.Models.ListingsItems
{
    /// <summary>
    /// AsinIdentifier
    /// </summary>
    [DataContract]
    public partial class AsinIdentifier : IEquatable<AsinIdentifier>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AsinIdentifier" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        public AsinIdentifier() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AsinIdentifier" /> class.
        /// </summary>
        /// <param name="marketplaceId">A marketplace identifier. Identifies the Amazon marketplace for the listings item.</param>
        /// <param name="asin">Amazon Standard Identification Number (ASIN) of the listings item.</param>
        public AsinIdentifier(string marketplaceId = default(string), string asin = default(string))
        {

        }

        /// <summary>
        /// A marketplace identifier. Identifies the Amazon marketplace for the listings item.
        /// </summary>
        /// <value>A marketplace identifier. Identifies the Amazon marketplace for the listings item.</value>
        [DataMember(Name = "marketplaceId", EmitDefaultValue = false)]
        public string MarketplaceId { get; set; }

        /// <summary>
        /// Amazon Standard Identification Number (ASIN) of the listings item.
        /// </summary>
        /// <value>Amazon Standard Identification Number (ASIN) of the listings item.</value>
        [DataMember(Name = "asin", EmitDefaultValue = false)]
        public string Asin { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AsinIdentifier {\n");
            sb.Append("  MarketplaceId: ").Append(MarketplaceId).Append("\n");
            sb.Append("  Asin: ").Append(Asin).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AsinIdentifier);
        }

        /// <summary>
        /// Returns true if AsinIdentifier instances are equal
        /// </summary>
        /// <param name="input">Instance of AsinIdentifier to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AsinIdentifier input)
        {
            if (input == null)
                return false;

            return
                (
                    this.MarketplaceId == input.MarketplaceId ||
                    (this.MarketplaceId != null &&
                    this.MarketplaceId.Equals(input.MarketplaceId))
                ) &&
                (
                    this.Asin == input.Asin ||
                    (this.Asin != null &&
                    this.Asin.Equals(input.Asin))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MarketplaceId != null)
                    hashCode = hashCode * 59 + this.MarketplaceId.GetHashCode();
                if (this.Asin != null)
                    hashCode = hashCode * 59 + this.Asin.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
